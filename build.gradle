plugins {
    id "com.gradle.plugin-publish" version "0.9.9"
    id "com.jfrog.bintray" version "1.7.3"
    id 'net.researchgate.release' version '2.6.0'
    id 'com.github.ben-manes.versions' version '0.17.0'
}

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'jacoco' //Currently this does not exclude methods generated via Annotations (toString in this plugin)

repositories {
    mavenLocal()
    mavenCentral()
}

group = 'com.d3banking.core.plugin.swagger'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
    compile gradleApi()
    compile localGroovy()

    compile 'commons-io:commons-io:2.6'
    compile 'org.apache.commons:commons-lang3:3.6'
    compile 'org.apache.commons:commons-text:1.1'
    compile 'com.github.jknack:handlebars:4.0.6'
    compile 'com.fasterxml.jackson.core:jackson-core:2.9.2'
    compile 'com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.9.2'
    compile 'javax.xml.bind:jaxb-api:2.2.4'

    //These should be pinned here until reflections/reflections#194 has been resolved
    compile 'io.swagger:swagger-jaxrs:1.5.13'
    compile 'io.swagger:swagger-jersey-jaxrs:1.5.13'

    compile 'javax.ws.rs:javax.ws.rs-api:2.1'
    compile 'com.sun.jersey:jersey-server:1.19.4'
    compile 'org.springframework:spring-context:5.0.1.RELEASE'
    compile 'org.springframework:spring-web:5.0.1.RELEASE'

    testCompile 'junit:junit:4.12'
    testCompile 'cglib:cglib-nodep:3.2.5'
    testCompile('org.spockframework:spock-core:1.1-groovy-2.4') {
        //We want to depend on the gradle version of groovy since this is a plugin
        exclude module: 'groovy-all'
    }
    testCompile 'org.yaml:snakeyaml:1.19'
    testCompile gradleApi()
}

wrapper {
    gradleVersion = "5.4.1"
    distributionType = Wrapper.DistributionType.ALL
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories getPublishRepositories()
}

Closure getPublishRepositories() {
    Closure repositories

    if (project.mavenUser == "d3veloper") {
        logger.debug("{}, mavenUser is 'd3veloper', will publish to local maven repository", name)
        repositories = {
            mavenLocal()
        }
    } else {
        logger.debug("{}, mavenUser is not 'd3veloper', will attempt to publish to Nexus", name)
        repositories = {
            maven {
                credentials {
                    username mavenUser
                    password mavenPassword
                }

                url "https://nexus.d3vcloud.com/nexus/content/repositories/releases/"
            }
        }
    }

    repositories
}
